from flask import Blueprint, render_template, request, redirect, url_for, session
from flask.scaffold import _matching_loader_thinks_module_is_package
from flask_login import login_required, current_user
from . import db
import os
from sklearn.preprocessing import LabelEncoder
import joblib
import pandas as pd
import numpy as np
main = Blueprint('main', __name__)

@main.route('/')
def index():
    return render_template('index.html')

@main.route('/profile')
@login_required
def profile():
    return render_template('profile.html', name=current_user.name)



filepath = "NOT FOUND"
orig_name="NO-NAME"



@main.route('/upload', methods=['GET', 'POST'])
def fileUpload_post():
    filepath = "NOT FOUND"
    orig_name=""
    if request.method == 'POST':
        files = request.files['upload']

        orig_name=files.filename        

        if not os.path.isdir('project/static'):
            os.mkdir('project/static')
        filepath = os.path.join('project/static', orig_name)
        files.save(filepath)
        print(filepath)
        session['key'] = filepath
        return redirect(url_for('main.scan', filepath=filepath))


    return render_template('fileUpload.html', filepath=filepath)



model = joblib.load(open('project/model.pkl', 'rb'))
scaler = joblib.load(open('project/scaler.pkl','rb'))
encoder = joblib.load(open('project/x_encoder1.pkl', 'rb'))

@main.route('/scan', methods=['get', 'post'])
def scan():
    
    filepath = session.get('key', None)
    df = np.asarray([])
    prediction = 0
    if request.method == 'POST':
        f = open(filepath, "r")
        print(f.read)
        stats = os.stat(filepath)
        lstats = os.lstat(filepath)
        filename, file_extension = os.path.splitext(filepath)
        #print(file_extension)
        #print(stats)
        # print(lstats)
        # print(stats.st_mode)

        int_features = [stats.st_mode, stats.st_ino, stats.st_dev, stats.st_nlink, stats.st_uid, stats.st_gid, stats.st_size, stats.st_atime, stats.st_ctime, 1]

        df = [np.array(int_features)]

        
        print(df)
        i = 1
        df = pd.DataFrame(df, columns = ['ST_MODE','ST_INO','ST_DEV','ST_NLINK','ST_UID','ST_GID','ST_SIZE','ST_ATIME','ST_CTIME','FILE_EXT'])
 
        # encoder = joblib.load('project/x_encoder1.pkl')
        for col in df:
            if(df[col].dtype=='object'):
                
                df[col]=encoder.transform(df[col])
                i+=1
            
        # ncoder = LabelEncoder()
        # df[file_extension] = ncoder.fit_transform(df[file_extension])
        
        df=scaler.transform(df)
        prediction = model.predict(df)

        print(prediction)
        if(prediction[0]== 1):
            return redirect(url_for('main.malware'))
        elif (prediction[0]== 0):
            return redirect(url_for('main.success'))
        

    return render_template('scan.html', prediction = prediction)


@main.route('/malware', methods = ['GET', 'POST'])
def malware():

    return render_template('malware.html')


@main.route('/success', methods = ['GET', 'POST'])
def success():

    return render_template('success.html')